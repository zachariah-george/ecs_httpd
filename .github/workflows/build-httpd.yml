name: build_httpd

on:
  workflow_run:
    workflows: ["check_vars"]
    types: 
      - completed

jobs:
  my_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      
    - name: Download vars_changed artifact
      uses: actions/download-artifact@v3
      with:
        name: vars_status

    - name: Read vars_status
      id: vars_status
      run: |
        echo "vars_changed=$(cat vars_status.txt)" >> $GITHUB_ENV
        
    # - name: Check for changes in vars.yml
    #   id: check
    #   run: |
    #     if git log -1 --name-only --pretty=format: | grep -q "vars.yml"; then
    #       echo "::set-output name=changed::true"
    #     fi
    # - name: Cache Python dependencies
    #   uses: actions/cache@v3.3.2
    #   with:
    #     path: ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-
    #   if: ${{ env.vars_changed == 'true' }}

    # - name: Set up Python
    #   uses: actions/setup-python@v4.7.1
    #   with:
    #     python-version: 3.8
    #   if: ${{ env.vars_changed == 'true' }}

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install ansible
    #   if: ${{ env.vars_changed == 'true' }}

    # - name: Run Ansible playbook
    #   run: ansible-playbook build-httpd.yml --connection=local --extra-vars '@vars.yml'
    #   if: ${{ env.vars_changed == 'true' }}
    
    # - name: Archive production artifacts
    #   uses: actions/upload-artifact@v3.1.3
    #   with:
    #     name: httpd-artifacts
    #     path: ./tmp/httpd/
    #   if: ${{ env.vars_changed == 'true' }}

    # - name: Compress httpd directory
    #   run: |
    #     cd ./tmp/httpd
    #     zip -r ../../httpd.zip .
    #   if: ${{ env.vars_changed == 'true' }}
     
    # - name: Extract httpd_version from vars.yml
    #   id: vars
    #   run: |
    #     # echo "::set-output name=version::$(python -c "import yaml;print(yaml.safe_load(open('vars.yml'))['httpd_version'])")"
    #     version=$(python -c "import yaml;print(yaml.safe_load(open('vars.yml'))['httpd_version'])")
    #     datetime=$(date +"%Y%m%d%H%M%S")
    #     version_with_datetime="$version-$datetime"
    #     echo "::set-output name=version::${version_with_datetime}"
    #   if: ${{ env.vars_changed == 'true' }}

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ steps.vars.outputs.version }}
    #     release_name: Release ${{ steps.vars.outputs.version }}
    #     draft: false
    #     prerelease: false
    #   if: ${{ env.vars_changed == 'true' }}

    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} 
    #     asset_path: ./httpd.zip
    #     asset_name: httpd.zip
    #     asset_content_type: application/zip
    #   if: ${{ env.vars_changed == 'true' }}
