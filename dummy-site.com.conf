# This is a sample conf file. Use it as a template and adapt it to your use case.
# You can disable this conf file be renaming it to dummy-site.com.conf.disabled
# The httpd server will only read configuration files with the extension .conf

# _default will match all requests which does not specify a FQDN
<VirtualHost _default_:443>

# VirtualHost can also be defined as follows:
# <VirtualHost 192.168.0.1:443>
# or as,
# <VirtualHost dummy-site.com:443>

# We are defining SRVNAME with our desired FQDN
# If we have to change the FQDN we only have to change it here
Define SRVNAME "dummy-site.com"

# One can also use IP address instead of FQDN for ServerName and ServerAlias
ServerName "${SRVNAME}"
ServerAlias "www.${SRVNAME} www.api-${SRVNAME}"
ServerAdmin "admin@${SRVNAME}"

CustomLog logs/${SRVNAME}-access_log.%Y%m%d-%H%M%S common

# Enable/Disable SSL for this virtual host.
SSLEngine on
SSLProxyEngine on

# SSL Certificate & Key 
SSLCertificateFile "${SRVROOT}/conf/certs/${SRVNAME}/server.crt"
SSLCertificateKeyFile "${SRVROOT}/conf/certs/${SRVNAME}/server.key"

# To mitigate js mime issue - might be removed in future versions
RewriteEngine on
RewriteRule ^.*\.js$ - [env=headerjs:1]
Header set Content-type application/javascript env=headerjs

# Proxying via http ip/FQDN:port
ProxyPass / http://localhost:7001/
ProxyPassReverse / http://localhost:7001/

# Proxying via https using FQDN
# ProxyPass / https://localhost:7002/
# ProxyPassReverse / https://localhost:7002/

# If you want to proxy a sub-path to a different backend other than what you have defined for the root path (/),
# do the following
# In the following directive, the declared ServerName and ServerAlias holds true
# <Location "/ecsservice">
#     ProxyPass http://localhost:3001/
#     ProxyPassReverse http://localhost:3001/
# </Location>
</VirtualHost>

# To be tested
# SetEnv force-proxy-request-1.0 1
# SetEnv proxy-nokeepalive 1
# (proxypass) retry=0 acquire=3000 timeout=3000 keepalive=off disablereuse=on
