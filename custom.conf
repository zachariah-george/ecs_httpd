# Open Ports
Listen 443

# Conf files for vhosts
Include conf/sites-enabled/*.conf

# Enabled modules
LoadModule headers_module modules/mod_headers.so
LoadModule log_debug_module modules/mod_log_debug.so
LoadModule log_rotate_module modules/mod_log_rotate.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule proxy_html_module modules/mod_proxy_html.so
LoadModule proxy_http2_module modules/mod_proxy_http2.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule security2_module modules/mod_security2.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule status_module modules/mod_status.so
LoadModule unique_id_module modules/mod_unique_id.so
LoadModule watchdog_module modules/mod_watchdog.so
LoadModule xml2enc_module modules/mod_xml2enc.so

# Uncomment to enable mod-security
# Include conf/extra/modsecurity.conf
# Include conf/extra/crs-setup.conf
# Include conf/extra/rules/*.conf

# Global ServerName
# ServerName 127.0.0.1

# Disable TRACE HTTP method to enhance security
TraceEnable Off

# Set the server timeout to 600 seconds for client connections
Timeout 600

# Disable ETags for files to improve caching efficiency
FileETag None

# Turn off server signature (server version information) in response headers
ServerSignature Off

# Set the server tokens to 'Prod' to minimize the amount of information
# revealed about the server software in response headers
ServerTokens Prod

# Enable HTTP Strict Transport Security (HSTS) for secure connections
# This header tells browsers to only use HTTPS for the specified duration
# and includes subdomains and preloading for added security
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

# Modify Set-Cookie headers to enhance security:
# - HttpOnly: Ensure cookies are only accessible via HTTP, not JavaScript
# - Secure: Send cookies only over HTTPS connections
# - SameSite=Strict: Strict enforcement of same-site cookie policy
Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure;SameSite=Strict

# Set the X-Content-Type-Options header to nosniff
# This prevents browsers from interpreting files as a different MIME type
# Header set X-Content-Type-Options nosniff

# SSLCipherSuite Configuration:
# Sets the allowed SSL/TLS cipher suites for the server.
# Includes only high-strength ciphers.
# Excludes cipher suites that support NULL authentication, export ciphers, DES, RC4, 3DES, MD5, PSK, SRP, Camellia, and ARIA.
SSLCipherSuite HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK:!SRP:!CAMELLIA:!ARIA:!CBC
SSLProxyCipherSuite HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK:!SRP:!CAMELLIA:!ARIA:!CBC

#   User agents such as web browsers are not configured for the user's
#   own preference of either security or performance, therefore this
#   must be the prerogative of the web server administrator who manages
#   cpu load versus confidentiality, so enforce the server's cipher order.
SSLHonorCipherOrder on

# SSLRandomSeed Configuration:
# Specifies the use of the operating system's built-in random number generator.
# During the startup phase, use the built-in mechanism for generating random data.
SSLRandomSeed startup builtin
# During the connection phase, use the built-in mechanism for generating random data.
SSLRandomSeed connect builtin


#   SSL Protocol support:
#   List the protocol versions which clients are allowed to connect with.
#   Disable SSLv3 by default (cf. RFC 7525 3.1.1).  TLSv1 (1.0) should be
#   disabled as quickly as practical.  By the end of 2016, only the TLSv1.2
#   protocol or later should remain in use.
SSLProtocol -all +TLSv1.2 +TLSv1.3
SSLProxyProtocol -all +TLSv1.2 +TLSv1.3

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First the mechanism 
#   to use and second the expiring timeout (in seconds).
SSLSessionCache        "shmcb:${SRVROOT}/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300

# Disable the preservation of the original host header when proxying requests
# Apache will use its own hostname instead of passing the client's hostname to the proxied server
# Applicable for Master Apache
# ProxyPreserveHost Off
          
# Disable SSL certificate verification for the proxied requests
# Acceptable for internal network configurations but not be secure for public-facing services
SSLProxyVerify none
          
# Disable checking the peer certificate name for SSL/TLS connections
# Acceptable for internal network configurations but not be secure for public-facing service
SSLProxyCheckPeerName Off
          
# Disable proxy request handling
ProxyRequests Off

# Enable log rotation
RotateLogs On
RotateInterval 86400

# WinNT MPM
# ThreadLimit: 15k - hard-limit for Windows
# ThreadsPerChild: constant number of worker threads in the server process
# MaxRequestsPerChild: maximum  number of requests a server process serves; Windows has only 1 child
# Uncomment after throrogh testing
# <IfModule mpm_winnt_module>
#   ThreadLimit 3840
#   ThreadsPerChild 3840
#   MaxRequestsPerChild 0
# </IfModule>

# Mod-Security Bypass

# To bypass the modsec rule which checks that the host header is not an IP address
SecRule REQUEST_HEADERS:Host "@rx ^[\d.:]+$" \
  "id:998,\
  phase:2,\
  nolog,\
  pass,\
  ctl:ruleRemoveById=920350"

# To bypass the modsec rule which checks for SQL injection, when password is a argument in the request
# Temporary fix till SQL injection is fixed in the application
SecRule ARGS_NAMES "@streq password" \
  "id:999,\
  phase:2,\
  nolog,\
  pass,\
  ctl:ruleRemoveById=942100"
